.formcarry-container {
    /* NORMAL */
    --fc-border-color: #ECEFF9;
    --fc-normal-text-color: #0E0B3D;
    --fc-normal-placeholder-color: #B3B8D0;

    /* PRIMARY COLOR | HSL FORMAT*/
    --fc-primary-color-hue: 220;
    --fc-error-color-hue: 356;
    --fc-primary-hsl: var(--fc-primary-color-hue), 100%, 54%;
    --fc-error-hsl: var(--fc-error-color-hue), 100%, 54%;

    /* HOVER */
    --fc-field-hover-bg-color: #F7F9FC;
    --fc-border-hover-color: #DDE0EE;
    --fc-field-hover-text-color: #B3B8D0;
}

.formcarry-container * {
    box-sizing: border-box;
}

.formcarry-container label {
    display: block;
    cursor: pointer;
}

.formcarry-container .formcarry-block:not(:first-child) {
    margin-top: 16px;
}

/*=============================================
=            Fields           =
=============================================*/

.formcarry-container input,
.formcarry-container textarea {
    margin-top: 4px;
    width: 100%;
    height: 42px;
    border: 1px solid var(--fc-border-color);
    color: var(--fc-normal-text-color);
    border-radius: 6px;
    padding: 8px 12px;
    font-size: 14px;
    transition: 125ms background, 125ms color, 125ms box-shadow;
}

.formcarry-container textarea {
    min-height: 188px;
    max-width: 100%;
    padding-top: 12px;
}

.formcarry-container input::placeholder,
.formcarry-container textarea::placeholder {
    color: var(--fc-normal-placeholder-color);
}

.formcarry-container input:hover,
.formcarry-container textarea:hover {
    border-color: var(--fc-border-hover-color);
    background-color: var(--fc-field-hover-bg-color);
}

.formcarry-container input:hover::placeholder,
.formcarry-container textarea:hover::placeholder {
    color: var(--fc-field-hover-text-color);
}

.formcarry-container input:focus,
.formcarry-container textarea:focus {
    background-color: #fff;
    border-color: hsl(var(--fc-primary-hsl));
    box-shadow: hsla(var(--fc-primary-hsl), 8%) 0px 0px 0px 3px;
    outline: none;
}

.formcarry-container button {
    font-weight: 500;
    font-size: 14px;
    letter-spacing: -0.02em;
    height: 40px;
    line-height: 24px;
    width: 100%;
    border: 0;
    border-radius: 6px;
    box-sizing: border-box;
    background-color: var(--button-color);
    color: #fff;
    cursor: pointer;
    box-shadow: 0 0 0 0 transparent;

    transition: 125ms all;
}

.formcarry-container button:hover {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), var(--button-color-hover);
}

.formcarry-container button:focus {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), var(--button-color-hover);
    border-inline: 1px solid rgba(255, 255, 255, 0.6);
    box-shadow: 0px 0px 0px 3px rgba(var(--button-color-hover), 12%);
}

.formcarry-container button:active {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), hsla(var(--fc-primary-hsl));
}

.formcarry-container button:disabled {
    background-color: hsla(var(--fc-primary-hsl), 40%);
    cursor: not-allowed;
}

.formcarry-container input:focus:required:invalid,
.formcarry-container input:focus:invalid,
.formcarry-container select:focus:required:invalid,
.formcarry-container select:focus:invalid {
    color: hsl(var(--fc-error-hsl));
    border-color: hsl(var(--fc-error-hsl));
    box-shadow: 0px 0px 0px 3px hsla(var(--fc-error-hsl), 12%);
}

/*=====  End of Fields  ======*/
.hidden {
    display: none;
}

/* success placeholder (replaces form) */
.success-box {
    display: none;
    background: linear-gradient(180deg, #f3fff3, #ebfff0);
    border: 1px solid #d4f5d4;
    padding: 18px;
    border-radius: 12px;
    text-align: center;
    font-weight: 600;
    color: #1b7a2a;
}

.success-box.show {
    display: block;
    animation: fadeInUp .28s ease-out
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(8px)
    }
    to {
        opacity: 1;
        transform: none
    }
}

/* inline error */
.error-inline {
    margin-top: 10px;
    color: #b92a2a;
    font-weight: 600;
    font-size: 13px
}

/* Bouton avec spinner */
button.loading {
    position: relative;
    color: transparent;
}

button.loading::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 18px;
    height: 18px;
    border: 2px solid #fff;
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 0.6s linear infinite;
    transform: translate(-50%, -50%);
}

@keyframes spin {
    to {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}